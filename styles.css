:root {
	--liesBackGround: white;
	--codeBackGround: black;
	--buttonWidth: 16vw;
	--buttonHeight: calc(var(--vh, 1vh) * 12.5); /*This is part of a cludge that gets around the fact that 100vh is not 100vh on mobile*/
	--buttonOffsetX: 26.5vw;
	/*--buttonOffsetY: 29.5vh;*/
	--buttonOffsetY: calc(var(--vh, 1vh) * 29.5);
	--linksLeftOffset: 20vw;
	/*--staticCornerButtonOffset: 2.25vh;*/
	--staticCornerButtonOffset: 16px;
	--staticCornerVW: calc(var(--staticCornerButtonOffset) * 9); /*144px*/
		/*the below hinky nonsense ensures that the main buttons land in the right spot even if you move their starting position around*/
	/*--clickedShiftX: 49vw;*/
	/*--clickedShiftY: 65vh;*/
	--clickedShiftX: calc(100vw - calc(
			var(--buttonWidth) + var(--staticCornerVW)
			)
			- calc(var(--buttonOffsetX) - calc(var(--buttonWidth)/2))
			);
	--clickedShiftY: calc(calc(var(--vh, 1vh) * 100) - calc(
		var(--buttonHeight)
		)
		- calc(var(--buttonOffsetY) - calc(var(--buttonHeight)/2))
		);

	/*--staticCornerVW: 20vh;*/

	--linksBoxWidth: 800px;
	font-size: 24px;
	/*
	--staticCornerButtonOffset: calc(var(--staticCornerVW) * 0.12);
	--staticCornerVW: 14.08vw;
	*/
	/*font-size: 2.8vh;*/

}

@media (max-width : 1088px) {
	:root {
	--buttonWidth: 20vw;
	--linksBoxWidth: calc(100% - 288px)
	}
}

@media (max-aspect-ratio : 1/1) {
	:root {
	/*--linksLeftOffset: 5%;*/
	/*--staticCornerVW: 15.625vw;*/
	/*--staticCornerVW: 12vh;*/
	/*--buttonWidth: 40%;*/
	font-size: 2.8vh;
	--buttonWidth: 33vw;
	--buttonHeight: 14vh;
	--buttonOffsetX: 37.5vw;
	--buttonOffsetY: 22vh;
	--linksBoxWidth: 80%;
	--staticCornerButtonOffset: 18px;
	--staticCornerButtonOffset: 3.2vw;
	}
}

/*@media only screen and (max-width : 768px) {
	:root {
	--linksLeftOffset: 3%;
	--staticCornerVW: 15.625vw;
		--buttonWidth: 40%;
	}
}*/

/*@media (max-width: 1680px) { 1440*900, or 1.6/1
	:root {
	--linksLeftOffset: 22.1875%;
	--staticCornerVW: 15.625vw;
	}
}

@media (max-width: 1403px) { /*1366*768 1.7/1
	:root {
	--linksLeftOffset: 20%;
	--staticCornerVW: 14.08vw;
	}
}*/

* {
  padding: 0;
  margin: 0;
}

html, body {
	overflow: hidden;
}

#background {
	color: red;
	position: fixed;
	height: 100%;
	width: 100%;
}

#background.codeShow {
	color: var(--codeBackGround);
}

}

a {
	text-decoration:none;
	color: inherit;
}

a:hover {
	text-decoration: underline;
}

button {
	border-radius: 10000px; /*this is how you do a 'pill' button*/
	border: none;
	z-index: 4;
}

button:focus {
	outline: none;
}

.resize-animation-stopper * {
  animation: none !important;
  transition: none !important;
}

.openDrawers {
	position: fixed;
	width: var(--buttonWidth);
	height: var(--buttonHeight);
	font-size: 8vh;
	transition: transform 0.5s ease-in, color 0.07s, background-color 0.07s;
}

.liesButton {
	background-color: var(--liesBackGround);
	color: var(--codeBackGround);
	font-family: "Dancing Script", cursive;
	top: calc(
		var(--buttonOffsetY) - calc(
			var(--buttonHeight) / 2));
	left: calc(
		var(--buttonOffsetX) - calc(
			var(--buttonWidth) / 2));
}

.liesButton:hover {
	background-color: var(--codeBackGround);
	color: var(--liesBackGround);
}

.liesButton:focus {
	background-color: var(--codeBackGround);
	color: var(--liesBackGround);
}

.liesButton.liesShow {
	transform: translateY(var(--clickedShiftY)) translateX(var(--clickedShiftX));
	background-color: transparent;
}

.liesButton.liesShow:hover {
	color: var(--codeBackGround);
}

.liesButton.liesShow:focus {
	color: var(--codeBackGround);
}

.liesButton.codeShow {
	transform: translateY(calc(-1 * var(--clickedShiftY))) translateX(calc(-1 * var(--clickedShiftX)));
	background-color: transparent;
}

/*.qguide {
	height: 81px;
	width: 81px;
	background-color: green;
	position: fixed;
	top: calc(
			var(--buttonOffset) - calc(
				var(--buttonHeight) / 2) + 2.25vh);
left: calc(
					var(--buttonOffset) - calc(
						var(--buttonWidth) / 2));
	z-index: 5;
}*/

.codeButton {
	background-color: var(--codeBackGround);
	color: var(--liesBackGround);
	font-family: 'Geo', monospace;
	top: calc(calc(var(--vh, 1vh) * 100) -
		calc(
			var(--buttonOffsetY) + calc(
				var(--buttonHeight) / 2
			)
		)
	);
	left: calc(100vw -
		calc(
			var(--buttonOffsetX) + calc(
				var(--buttonWidth) / 2
			)
		)
	);
}

.codeButton:focus {
	color: var(--codeBackGround);
	background-color: var(--liesBackGround);
}

.codeButton:hover {
	color: var(--codeBackGround);
	background-color: var(--liesBackGround);
}

.codeButton.codeShow{
transform: translateY(calc(-1 * var(--clickedShiftY))) translateX(calc(-1 * var(--clickedShiftX)));
	background-color: transparent;
}

.codeButton.liesShow {
	transform: translateY(var(--clickedShiftY)) translateX(var(--clickedShiftX));
	background-color: transparent;
}

.codeButton.codeShow:hover {
	color: var(--liesBackGround);
}

.codeButton.codeShow:focus {
	color: var(--liesBackGround);
}

#shapecontainercontainer {
	position: fixed;
	top: 0%;
	height: 100vw;
	width: 100%;
}

#shapeContainer {
	position: fixed  !important;
	height: 100%;
	width: 100%;
	z-index: 1;
	/*transition:transition: left 0.5s ease-in, top 0.5s ease-in,*/
	color: var(--codeBackGround);
	background-color: var(--liesBackGround);
}

/*#liesShape {
	visibility: visible;
}


#codeShape {
	visibility: visible;
}
*/
#liesShape.liesShow {
	visibility: hidden;
}

#codeShape.codeShow {
	visibility: hidden;
}

/* Closer Buttons */

.closeDrawers {
	position: fixed;
	width: calc(var(--staticCornerVW) * 0.375);
	height: calc(var(--staticCornerVW) * 0.375);
	transition: opacity 1.2s;
	visibility: hidden;
	opacity: 0;
}

.icon {
  display: inline-block;
  width: 100%;
  height: 100%;
  stroke-width: 0;
  fill: green;
	visibility:inherit;
}

.liesCloser > .icon {
	fill: var(--codeBackGround);
}

.codeCloser > .icon {
	fill: var(--liesBackGround);
}

.topCorner {
	position: fixed;
	top:0%;
	left:0%;
	width:var(--staticCornerVW);
	height:var(--staticCornerVW);
	fill: var(--liesBackGround);
	z-index: 1;
}

.topCorner.codeShow {
	z-index: 3;
}

.codeCloser {
	background-color: var(--codeBackGround);
	top: var(--staticCornerButtonOffset);
	left: var(--staticCornerButtonOffset);
}

.codeCloser.codeShow {
	visibility: visible;
	opacity: 1;
	z-index: 5;
}



.bottomCorner {
	position: fixed;
	right:0%;
	bottom:0%;
	width:var(--staticCornerVW);
	height:var(--staticCornerVW);
	color: var(--codeBackGround);
	z-index: 1;
}

.liesCloser {
	background-color: var(--liesBackGround);
	right: var(--staticCornerButtonOffset);
	bottom: var(--staticCornerButtonOffset);
}

.bottomCorner.liesShow {
		z-index: 3;
}

.liesCloser.liesShow{
	visibility: visible;
	opacity: 1;
	z-index: 5;
}




.linksContainer {
	position: fixed;
	width: 100%;
	/*padding-left: var(--linksLeftOffset);
	padding-right: var(--linksLeftOffset);
	/*width: calc(100% - calc(2 * var(--linksLeftOffset)));*/
	z-index: 2;
	opacity: 0;
	transition: transform 0.5s ease-in, opacity 0.5s ease-in; /*color 0.07s,*/ /*width 0.5s ease-in,*/ /*opacity 0.5s ease-in*/;
	height: 100%
}

.liesLinksContainer {
	color: var(--codeBackGround);
	left:calc(0% - var(--clickedShiftX));
	top:calc(0% - var(--clickedShiftY));
}

.codeLinksContainer {
	color: var(--liesBackGround);
	left:calc(0% + var(--clickedShiftX));
	top: calc(0% + var(--clickedShiftY));
}

.liesLinksContainer.liesShow {
	/*visibility: visible;*/
	transform: translateY(var(--clickedShiftY)) translateX(var(--clickedShiftX));
	/*top: calc(1.5 * var(--buttonHeight));*/
	/*z-index: 2;*/
	/*height: 100%;*/
	/*height: calc(100% - calc(1.5 * var(--buttonHeight)));*/
	opacity: 1;
	z-index: 3;
}

.codeLinksContainer.codeShow {
	position: fixed;
	/*visibility: visible;*/
	transform: translateY(calc(-1 * var(--clickedShiftY))) translateX(calc(-1 * var(--clickedShiftX)));
	/*opacity: 1;*/
	/*top: calc(1.5 * var(--buttonHeight));*/
	/*height: 100%;
	/*height: calc(100% - calc(1.5 * var(--buttonHeight)));*/
	opacity: 1;
	z-index: 3
}

.linksClass {
	height: auto;
	margin-top: 60px;
	/*width: calc(100% - calc(2 * var(--linksLeftOffset)));*/
	margin-left: auto;
	margin-right: auto;
	width: auto;
	max-width: var(--linksBoxWidth);
	/*position: fixed;
	opacity: 0;*/
	/*visibility: hidden;*/
	/*transition: left 0.5s ease-in, top 0.5s ease-in, color 0.07s, opacity 0.5s;*/
	/*z-index: -2;*/
	display: grid;
	grid-template-columns: 17.5% 77.5%;
	grid-template-rows: repeat(auto-fill, auto);
	grid-gap: 55px 4.5%;
	opacity: 0;
	transition: opacity 0.5s ease-in;
	visibility: hidden !important;
}

.spacer {
	height: var(--buttonHeight);
}

.codeLinks {
	margin-top: calc(var(--buttonHeight) * 1.2);
}

.liesLinks.liesShow {
	opacity: 1;
}

.codeLinks.codeShow {
	opacity: 1;
}

.liesLinks.visible {
	visibility: visible !important;
}

.codeLinks.visible {
	visibility: visible !important;
}

.portImg {
	width: 100%;
	border-radius: 50%;
}

.portWords {
	line-height: 1.6rem;
	font-weight: 300;
	font-family: Lato, sans-serif;
}

h1 {
	font-family: Quicksand, sans-serif;
	font-size: 1.33rem;
	font-weight: 400;
	line-height: 1.6em;
	text-align: center;
}

i {
	color: #4A4A4A;
}
/*.linksSpacer {
	height: var(--buttonHeight);
	height: calc(1.5 * var(--buttonHeight));
	height: calc(3 * var(--buttonHeight));
}*/

/* Fader Element */

.fader {
	position: fixed;
	width: 100vw;
	height: calc(1.2 * var(--buttonHeight));
	/*z-index: -2;*/
	opacity: 0;
	visibility: hidden;
	transition: transform 0.5s ease-in, opacity 0.5s ease-in;
	/*transition: left 0.5s ease-in, top 0.5s ease-in, opacity 0.5s ease-in;*/
}

.liesFader {
	top: calc(calc(100% - calc(1.2 * var(--buttonHeight))) - var(--clickedShiftY));
	left: calc(0% - var(--clickedShiftX));
	/* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#ffffff+0,ffffff+33,ffffff+100&0+0,1+33,1+100 */
	background: -moz-linear-gradient(top,  rgba(255,255,255,0) 0%, rgba(255,255,255,1) 33%, rgba(255,255,255,1) 100%); /* FF3.6-15 */
	background: -webkit-linear-gradient(top,  rgba(255,255,255,0) 0%,rgba(255,255,255,1) 33%,rgba(255,255,255,1) 100%); /* Chrome10-25,Safari5.1-6 */
	background: linear-gradient(to bottom,  rgba(255,255,255,0) 0%,rgba(255,255,255,1) 33%,rgba(255,255,255,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff',GradientType=0 ); /* IE6-9 */
}

.codeFader {
	top: var(--clickedShiftY);
	left: var(--clickedShiftX);
	/* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#000000+0,000000+66,ffffff+100&1+0,1+66,0+100 */
	background: -moz-linear-gradient(top,  rgba(0,0,0,1) 0%, rgba(0,0,0,1) 66%, rgba(255,255,255,0) 100%); /* FF3.6-15 */
	background: -webkit-linear-gradient(top,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 66%,rgba(255,255,255,0) 100%); /* Chrome10-25,Safari5.1-6 */
	background: linear-gradient(to bottom,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 66%,rgba(255,255,255,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#00ffffff',GradientType=0 ); /* IE6-9 */

}

.liesFader.liesShow {
	opacity: 1;
	z-index: 3;
	/*left: var(--linksLeftOffset);
	top: calc(100% - calc(1.5 * var(--buttonHeight)));*/
	transform: translateY(var(--clickedShiftY)) translateX(var(--clickedShiftX));
}

.codeFader.codeShow {
	opacity: 1;
	z-index: 3;
	/*left: var(--linksLeftOffset);*/
	/*top: 0%;*/
	transform: translateY(calc(-1 * var(--clickedShiftY))) translateX(calc(-1 * var(--clickedShiftX)));
}

/*.portItem {
	display: flex;
	padding: 3%;
	height: auto;
	align-items: center;
}*/

/*.linksSpacer {
	min-height: calc(calc(var(--buttonHeight) * 1.5) - 115px)
}*/

.liesScroll > .os-scrollbar-vertical > .os-scrollbar-track > .os-scrollbar-handle {
	/*width: 13px !important;*/
	position: absolute;
	width: calc(var(--staticCornerVW) * 0.375);
	right: var(--staticCornerButtonOffset) !important;
	height: 100%;
	border-radius: 10000px;
	background-color: var(--liesBackGround);
	box-shadow: 0 0 0 2px var(--codeBackGround);

}

.liesScroll > .os-scrollbar-vertical {
	position: fixed !important;
	/*right: 2.25vh !important;*/
	top: var(--staticCornerButtonOffset) !important;
	bottom: calc(var(--staticCornerButtonOffset) + var(--staticCornerVW)) !important;
}

@media (max-aspect-ratio : 1/1) {
	.liesScroll > .os-scrollbar-vertical > .os-scrollbar-track > .os-scrollbar-handle {
		width: 3px;
		background-color: var(--codeBackGround);
		box-shadow: none;
}

.liesScroll > .os-scrollbar-vertical {
}

.codeScroll > .os-scrollbar-vertical > .os-scrollbar-track > .os-scrollbar-handle {
	position: fixed !important;
	width: calc(var(--staticCornerVW) * 0.375);
	left: var(--staticCornerButtonOffset) !important;
	height: 100%;
	border-radius: 10000px;
	background-color: var(--codeBackGround);
	box-shadow: 0 0 0 2px var(--liesBackGround);

}

.codeScroll > .os-scrollbar-vertical {
	position: absolute !important;
	top: calc(var(--staticCornerButtonOffset) + var(--staticCornerVW)) !important;
	bottom: var(--staticCornerButtonOffset) !important;
}

@media (max-aspect-ratio : 1/1) {.codeScroll > .os-scrollbar-vertical > .os-scrollbar-track > .os-scrollbar-handle {
	width: 3px;
	background-color: var(--liesBackGround);
	box-shadow: none;
}

.codeScroll > .os-scrollbar-vertical {

}
}
